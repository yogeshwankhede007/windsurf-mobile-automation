[pytest]
# Test discovery
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Console output
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Add markers
markers =
    smoke: mark test as smoke test
    regression: mark test as regression test
    android: mark test as android specific
    ios: mark test as ios specific
    wip: work in progress - do not run in CI

# Parallel execution
addopts = 
    -n auto 
    --dist=loadscope
    -v
    --strict-markers
    --html=reports/report.html
    --self-contained-html
    --junitxml=reports/junit.xml
    --cov=.
    --cov-report=html:reports/coverage
    --cov-report=xml:reports/coverage.xml

# Number of parallel workers (auto-detects CPU count by default)
# workers = auto

# Test execution
# Default timeout for each test (in seconds)
timeout = 300

# JUnit XML reporting
junit_suite_name = mobile-automation-tests
junit_logging = all
junit_log_passing_tests = true

# HTML Report
htmlpath = reports/report.html
self_contained_html = true

# JUnit XML report (for CI integration)
junit_suite_name = MobileAutomationTests
junit_logging = all
junit_log_passing_tests = true
junit_family = xunit2
